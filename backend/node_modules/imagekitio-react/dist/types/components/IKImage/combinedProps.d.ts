import { UrlOptionsPath, UrlOptionsSrc } from "imagekit-javascript/dist/src/interfaces/UrlOptions";
import { InferProps } from "prop-types";
import Props from "./props";
declare const COMBINED_IMAGE_PROP_TYPES: {
    loading: import("prop-types").Requireable<string>;
    lqip: import("prop-types").Requireable<InferProps<{
        active: import("prop-types").Requireable<boolean>;
        quality: import("prop-types").Requireable<number>;
        threshold: import("prop-types").Requireable<number>;
        blur: import("prop-types").Requireable<number>;
        raw: import("prop-types").Requireable<string>;
    }>>;
    path: import("prop-types").Requireable<string>;
    src: import("prop-types").Requireable<string>;
    queryParameters: import("prop-types").Requireable<{
        [x: string]: NonNullable<NonNullable<string | number | null | undefined>>;
    }>;
    transformation: import("prop-types").Requireable<object[]>;
    transformationPosition: import("prop-types").Requireable<string>;
    publicKey: import("prop-types").Requireable<string>;
    urlEndpoint: import("prop-types").Requireable<string>;
    authenticator: import("prop-types").Requireable<(...args: any[]) => any>;
};
type Lqip = {
    active?: boolean;
    quality?: number;
    threshold?: number;
    blur?: number;
    raw?: string;
} | null;
export type IKImageProps = Omit<InferProps<typeof COMBINED_IMAGE_PROP_TYPES>, "src" | "path" | "lqip"> & (UrlOptionsPath | UrlOptionsSrc) & React.ImgHTMLAttributes<HTMLImageElement> & {
    lqip?: Lqip;
    loading?: 'lazy';
};
export type IKImageBaseProps = Omit<InferProps<typeof Props>, "lqip"> & {
    lqip?: Lqip;
    loading?: 'lazy';
};
export default COMBINED_IMAGE_PROP_TYPES;
