import ImageKit from 'imagekit-javascript';
import PropTypes, { InferProps } from 'prop-types';
declare const Props: {
    publicKey: PropTypes.Requireable<string>;
    urlEndpoint: PropTypes.Requireable<string>;
    authenticator: PropTypes.Requireable<(...args: any[]) => any>;
};
export declare const IKContextProps: {
    transformationPosition: PropTypes.Requireable<string>;
    publicKey: PropTypes.Requireable<string>;
    urlEndpoint: PropTypes.Requireable<string>;
    authenticator: PropTypes.Requireable<(...args: any[]) => any>;
};
export declare const IKContextExtractedProps: {
    ikClient: PropTypes.Requireable<ImageKit>;
    transformationPosition: PropTypes.Requireable<string>;
    publicKey: PropTypes.Requireable<string>;
    urlEndpoint: PropTypes.Requireable<string>;
    authenticator: PropTypes.Requireable<(...args: any[]) => any>;
};
export type IKContextProps = InferProps<typeof IKContextProps> & {
    urlEndpoint?: string;
};
export type IKContextBaseProps = InferProps<typeof Props>;
export type IKContextExtractedProps = InferProps<typeof IKContextExtractedProps> & {
    urlEndpoint?: string;
};
export default Props;
