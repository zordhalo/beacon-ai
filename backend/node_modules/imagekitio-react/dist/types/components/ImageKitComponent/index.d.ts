import React from 'react';
import ImageKit from 'imagekit-javascript';
import { IKContextBaseProps } from '../IKContext/props';
declare const useImageKitComponent: <T = void>(props: {
    children?: React.ReactNode;
} & import("prop-types").InferPropsInner<Pick<{
    publicKey: import("prop-types").Requireable<string>;
    urlEndpoint: import("prop-types").Requireable<string>;
    authenticator: import("prop-types").Requireable<(...args: any[]) => any>;
}, never>> & Partial<import("prop-types").InferPropsInner<Pick<{
    publicKey: import("prop-types").Requireable<string>;
    urlEndpoint: import("prop-types").Requireable<string>;
    authenticator: import("prop-types").Requireable<(...args: any[]) => any>;
}, "urlEndpoint" | "publicKey" | "authenticator">>> & T) => {
    getIKClient: () => ImageKit;
};
export default useImageKitComponent;
