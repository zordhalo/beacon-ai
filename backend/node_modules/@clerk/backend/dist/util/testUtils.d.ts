export declare function jsonOk(body: unknown, status?: number): Promise<{
    ok: boolean;
    status: number;
    statusText: string;
    headers: {
        get: (key: string) => "application/json" | "mock_cf_ray" | null;
    };
    json(): Promise<unknown>;
}>;
export declare function jsonPaginatedOk(body: unknown[], total_count: number, status?: number): Promise<{
    ok: boolean;
    status: number;
    statusText: string;
    headers: {
        get: (key: string) => "application/json" | "mock_cf_ray" | null;
    };
    json(): Promise<{
        data: unknown[];
        total_count: number;
    }>;
}>;
export declare function jsonNotOk(body: unknown): Promise<{
    ok: boolean;
    status: number;
    statusText: number;
    headers: {
        get: (key: string) => "application/json" | "mock_cf_ray" | null;
    };
    json(): Promise<unknown>;
}>;
export declare function jsonError(body: unknown, status?: number): Promise<{
    ok: boolean;
    status: number;
    statusText: string;
    headers: {
        get: (key: string) => "application/json" | "mock_cf_ray" | null;
    };
    json(): Promise<unknown>;
}>;
//# sourceMappingURL=testUtils.d.ts.map