// src/authorization-errors.ts
var REVERIFICATION_REASON = "reverification-error";
var __experimental_reverificationError = (missingConfig) => ({
  clerk_error: {
    type: "forbidden",
    reason: REVERIFICATION_REASON,
    metadata: {
      reverification: missingConfig
    }
  }
});
var __experimental_reverificationErrorResponse = (...args) => new Response(JSON.stringify(__experimental_reverificationError(...args)), {
  status: 403
});
var __experimental_isReverificationHint = (result) => {
  var _a, _b;
  return result && typeof result === "object" && "clerk_error" in result && ((_a = result.clerk_error) == null ? void 0 : _a.type) === "forbidden" && ((_b = result.clerk_error) == null ? void 0 : _b.reason) === REVERIFICATION_REASON;
};

export {
  __experimental_reverificationError,
  __experimental_reverificationErrorResponse,
  __experimental_isReverificationHint
};
//# sourceMappingURL=chunk-J7YO7ZPY.mjs.map